from pandas.core.dtypes.inference import re
import pandas as pd
import plotly.express as px
import numbers
import plotly.graph_objects as go

df= pd.read_csv('https://raw.githubusercontent.com/Acsa01/World-Cup-2022---Fran-a-e-Argentina/main/Fifa_2022.csv')
df.head()
print(df.shape)

#insere jogo em df_filtrado
# return df_filtrado
def pais_df (pais1, pais2):

  posicao_time1 = [] # Criando uma lista vazia de posições
  time1 = list(df['team1']) # Criando uma lista para percorre a 1 coluna
  time2 = list(df['team2']) # criando uma lista para percorre a 2 coluna
  for i in range(len(time1)): #for que percorre todo o dataframe, e pega os times e suas posições onde se encontra
    if time1[i] == pais1:
      posicao_time1.append(i)
  for j in posicao_time1: 
    if time2[j] == pais2:
      jogo_time1_time2 = j 
      break #pra acabar com o loop
  return jogo_time1_time2
  
  def posicao(pais1,pais2):
  pais1 = pais1.upper() #Deixar a string maiuscula
  pais2 = pais2.upper()

  posicao_p1_time1 = []
  posicao_p1_time2 = []
  posicao_p2_time1 = []
  posicao_p2_time2 = []

  time1 = list(df['team1'])
  time2 = list(df['team2'])

  for i in range(len(time1)):
    if time1[i] == pais1:
      posicao_p1_time1.append(i)
  for i in range(len(time2)):
    if time2[i] == pais1:
      posicao_p1_time2.append(i)
  for i in range(len(time1)):
    if time1[i] == pais2:
      posicao_p2_time1.append(i)
  for i in range(len(time2)):
    if time2[i] == pais2:
      posicao_p2_time2.append(i)

  posicoes_pais1 = sorted(posicao_p1_time1 + posicao_p1_time2)
  posicoes_pais2 = sorted(posicao_p2_time1 + posicao_p2_time2)

  return posicoes_pais1, posicoes_pais2

print(posicao('Brazil', 'argentina')) #testando saindo

def posse_bola(pais1, pais2):
  pais1 = pais1.upper() #Deixar a string maiuscula
  pais2 = pais2.upper()


  #posicao
  pos_pais1, pos_pais2 = posicao(pais1, pais2)
  

  posse_pais1 = [] # posses em si
  posse_pais2 = []

  for i in pos_pais1: # pegando as posses
    if i in pos_pais1:
      posse_pais1.append(int(df['possession team1'][i][:-1]))
    if i in pos_pais1:
      posse_pais1.append(int(df['possession team2'][i][:-1]))
  for i in pos_pais2:
    if i in pos_pais2:
      posse_pais2.append(int(df['possession team1'][i][:-1]))
    if i in pos_pais2:
      posse_pais2.append(int(df['possession team2'][i][:-1]))
    
  return posse_pais1, posse_pais2, pais1, pais2
  
  def gols(pais1, pais2):
  pais1 = pais1.upper() #Deixar a string maiuscula
  pais2 = pais2.upper()

  #posicao
  gols_pais1, gols_pais2 = posicao(pais1, pais2)
  

  gol_pais1 = [] # gols em si
  gol_pais2 = []

  for i in gols_pais1: # pegando os gols
    if i in gols_pais1:
      gol_pais1.append(int(df['number of goals team1'][i]))
    if i in gols_pais1:
      gol_pais1.append(int(df['number of goals team2'][i]))
  for i in gols_pais2:
    if i in gols_pais2:
      gol_pais2.append(int(df['number of goals team1'][i]))
    if i in gols_pais2:
      gol_pais2.append(int(df['number of goals team2'][i]))
    
  return gol_pais1, gol_pais2, pais1, pais2

print(gols('argentina', 'france'))

# Grafico dos gols
#comparar tamanho das listas, plora

gol_p1, gol_p2, time1, time2 = gols('france', 'argentina')

if len(gol_p1) > len(gol_p2):
  indice = len(gol_p1)
else:
  indice = len(gol_p2)

jogos = []
for i in range(indice):
  jogos.append(f'Jogo {i}')



fig = go.Figure()
fig.add_trace(go.Bar(
    x=jogos,
    y=gol_p1,
    name='GOL ' + time1,
    marker_color='red'
))
fig.add_trace(go.Bar(
    x=jogos,
    y=gol_p2,
    name='GOL ' + time2,
    marker_color='blue'
))

# Here we modify the tickangle of the xaxis, resulting in rotated labels.
fig.update_layout(barmode='group', xaxis_tickangle=-45)
fig.show()

# Grafico do posse de bola
    
posse_p1, posse_p2, pais1, pais2 = posse_bola('france', 'argentina')

fig = go.Figure()
fig.add_trace(go.Bar(
    x=jogos,
    y=posse_p1,
    name='Posse de Bola ' + pais1,
    marker_color='indianred'
))
fig.add_trace(go.Bar(
    x=jogos,
    y=posse_p2,
    name='Posse de bola ' + pais2,
    marker_color='lightsalmon'
))

# Here we modify the tickangle of the xaxis, resulting in rotated labels.
fig.update_layout(barmode='group', xaxis_tickangle=-45)
fig.show()
